[{"/Users/kishanprajapati/web-chatbot/client/src/index.js":"1","/Users/kishanprajapati/web-chatbot/client/src/App.js":"2","/Users/kishanprajapati/web-chatbot/client/src/chatbot/ActionProvider.js":"3","/Users/kishanprajapati/web-chatbot/client/src/chatbot/MessageParser.js":"4","/Users/kishanprajapati/web-chatbot/client/src/chatbot/config.js":"5","/Users/kishanprajapati/web-chatbot/client/src/component/Options/Options.js":"6","/Users/kishanprajapati/web-chatbot/client/src/component/videoPlayer/videoPlayer.js":"7","/Users/kishanprajapati/web-chatbot/client/src/component/options/options.js":"8","/Users/kishanprajapati/web-chatbot/client/src/component/weatherCard/weatherCard.js":"9"},{"size":434,"mtime":1649844892731,"results":"10","hashOfConfig":"11"},{"size":634,"mtime":1649849673231,"results":"12","hashOfConfig":"11"},{"size":1465,"mtime":1649927839262,"results":"13","hashOfConfig":"11"},{"size":2236,"mtime":1650002002015,"results":"14","hashOfConfig":"11"},{"size":2781,"mtime":1650262667848,"results":"15","hashOfConfig":"11"},{"size":584,"mtime":1649846129109,"results":"16","hashOfConfig":"11"},{"size":287,"mtime":1649846668098,"results":"17","hashOfConfig":"11"},{"size":584,"mtime":1649846129109,"results":"18","hashOfConfig":"11"},{"size":948,"mtime":1649918334831,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"vunr6s",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/Users/kishanprajapati/web-chatbot/client/src/index.js",[],[],["52","53"],"/Users/kishanprajapati/web-chatbot/client/src/App.js",["54"],[],"import React from \"react\";\nimport Chatbot from 'react-chatbot-kit';\nimport 'react-chatbot-kit/build/main.css';\n\nimport config from \"./chatbot/config\";\nimport ActionProvider from \"./chatbot/ActionProvider\";\nimport MessageParser from \"./chatbot/MessageParser\";\n\nimport WeatherCard from \"./component/weatherCard/weatherCard\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div >\n        <Chatbot\n          config={config}\n          actionProvider={ActionProvider}\n          messageParser={MessageParser}\n        />\n      {/* <WeatherCard/> */}\n     \n      </div>\n    </div>\n  );\n}\n\nexport default App;",["55","56"],"/Users/kishanprajapati/web-chatbot/client/src/chatbot/ActionProvider.js",[],[],"/Users/kishanprajapati/web-chatbot/client/src/chatbot/MessageParser.js",["57"],[],"/Users/kishanprajapati/web-chatbot/client/src/chatbot/config.js",["58","59","60"],[],"import React, { useState } from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport volume from \"../asset/volumeOn.png\"\nimport muteVolume from \"../asset/muteVolume.png\"\nimport Options from \"../component/options/options\"\nimport VideoPlayer from \"../component/videoPlayer/videoPlayer\";\nimport WeatherCard from \"../component/weatherCard/weatherCard\";\n// const [lightMode, setLightMode ] = useState(false)\n\n// const config = () => {\n//   return\n//   {\n//       initialMessages: [\n//         createChatBotMessage(\"Hello! I am your weather assistant. How can I help ?\")\n//       ],\n   \n//         customComponents: {\n//       // Replaces the default header\n\n//       header: () => <div style={{ backgroundColor: 'grey', padding: \"5px\" }}>\n//         WeatherBot\n//         <img id=\"image\"\n//           // onClick={() => setLightMode(prevMode => !prevMode)}\n//           // src={lightMode ? { volume } : { muteVolume }}\n//           src={volume}\n//           onClick={() => \"hello\"}\n//         />\n//       </div>\n//     },\n\n//     widgets: [\n//       {\n//         widgetName: \"options\",\n//         widgetFunc: (props) => <Options {...props} />,\n//       },\n//       {\n//         widgetName: \"video\",\n//         widgetFunc: (props) => <VideoPlayer {...props} />,\n//       },\n//       {\n//         widgetName: \"weatherCard\",\n//         widgetFunc: (props) => <WeatherCard {...props} />,\n//         props: {\n//           city: \"Bombay\",\n//           temp: 35,\n//           date: new Date().toDateString(),\n//           weather_desc: \"Cloudy\",\n//           weather_imgurl: \"client/src/asset/cloud.jpeg\"\n//         }\n//       }\n\n//     ]\n    \n//   }\n\n\n// }\n\n\n\nconst config =  {\n  \n    initialMessages: [\n      createChatBotMessage(\"Hello! I am your weather assistant. How can I help ?\"),\n    ],\n   \n     customComponents: {\n      // Replaces the default header\n\n      header: () => <div style={{ backgroundColor: 'grey', padding: \"5px\" }}>\n        WeatherBot\n        <img id=\"image\"\n          // onClick={() => setLightMode(prevMode => !prevMode)}\n          // src={lightMode ? { volume } : { muteVolume }}\n          src={volume}\n          onClick={() => \"hello\"}\n        />\n      </div>\n    },\n     widgets: [\n      {\n        widgetName: \"options\",\n        widgetFunc: (props) => <Options {...props} />,\n      },\n      {\n        widgetName: \"video\",\n        widgetFunc: (props) => <VideoPlayer {...props} />,\n      },\n      {\n        widgetName: \"weatherCard\",\n        widgetFunc: (props) => <WeatherCard {...props} />,\n        props: {\n          city: \"Bombay\",\n          temp: 35,\n          date: new Date().toDateString(),\n          weather_desc: \"Cloudy\",\n          weather_imgurl: \"client/src/asset/cloud.jpeg\"\n        }\n      }\n\n    ]\n  \n};\nexport default config;\n\n","/Users/kishanprajapati/web-chatbot/client/src/component/Options/Options.js",[],[],"/Users/kishanprajapati/web-chatbot/client/src/component/videoPlayer/videoPlayer.js",[],[],"/Users/kishanprajapati/web-chatbot/client/src/component/options/options.js",[],[],"/Users/kishanprajapati/web-chatbot/client/src/component/weatherCard/weatherCard.js",["61"],[],"import React, { useState } from \"react\";\nimport \"./weatherCard.css\";\n\nconst WeatherCard = (props) => {\n//   const [query, setQuery] = useState(\"\");\n//   const [weather, setWeather] = useState({});\nconsole.log(\"Props:\",props);\n  return (\n    <div className=\"main-container\">\n   \n      \n        <div className=\"city\">\n          <div className=\"date\"> {new Date().toDateString(\"en-US\")}</div>\n       \n\n          <h2 className=\"city-name\">\n            <span>{props.city}</span>\n            <sup>\"us\"</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(props.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img\n              className=\"city-icon\"\n              src={props.weather_imgurl}\n              alt=\"weather description\"\n            />\n            <p>{props.weather_desc}</p>\n          </div>\n        </div>\n      \n    </div>\n  );\n};\n\nexport default WeatherCard;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":9,"column":8,"nodeType":"68","messageId":"69","endLine":9,"endColumn":19},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":41,"column":19,"nodeType":"68","messageId":"69","endLine":41,"endColumn":38},{"ruleId":"66","severity":1,"message":"73","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"74","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":72,"column":9,"nodeType":"77","endLine":77,"endColumn":11},{"ruleId":"66","severity":1,"message":"73","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'WeatherCard' is defined but never used.","Identifier","unusedVar",["78"],["79"],"'fulfillmentMessages' is assigned a value but never used.","'useState' is defined but never used.","'muteVolume' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]