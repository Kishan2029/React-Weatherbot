{"ast":null,"code":"var _jsxFileName = \"/Users/kishanprajapati/web-chatbot/client/src/chatbot/config.js\";\nimport React, { useState } from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport volume from \"../asset/volumeOn.png\";\nimport Options from \"../Options/Options\"; // const [lightMode, setLightMode ] = useState(false)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {\n  botName: \"WeatherBot\",\n  initialMessages: [createChatBotMessage(`Hello! I am your weather assistant. How can I help ?`)],\n  customComponents: {\n    // Replaces the default header\n    header: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'grey',\n        padding: \"5px\"\n      },\n      children: [\"WeatherBot\", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"image\" // onClick={() => setLightMode(prevMode => !prevMode)}\n        // src={lightMode ? { volume } : { volume }}\n        ,\n        src: volume,\n        onClick: () => \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 19\n    }, this)\n  },\n  widgets: [{\n    widgetName: \"options\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Options, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this)\n  }, {\n    widgetName: \"javascriptQuiz\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Quiz, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this),\n    props: {\n      questions: [{\n        question: \"What is closure?\",\n        answer: \"Closure is a way for a function to retain access to it's enclosing function scope after the execution of that function is finished.\",\n        id: 1\n      }, {\n        question: \"Explain prototypal inheritance\",\n        answer: \"Prototypal inheritance is a link between an object and an object store that holds shared properties. If a property is not found on the host object, javascript will check the prototype object.\",\n        id: 2\n      }]\n    }\n  }]\n};\nexport default config;","map":{"version":3,"sources":["/Users/kishanprajapati/web-chatbot/client/src/chatbot/config.js"],"names":["React","useState","createChatBotMessage","volume","Options","config","botName","initialMessages","customComponents","header","backgroundColor","padding","widgets","widgetName","widgetFunc","props","questions","question","answer","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;;AAIA,MAAMC,MAAM,GAAG;AAEbC,EAAAA,OAAO,EAAE,YAFI;AAGbC,EAAAA,eAAe,EAAE,CACfL,oBAAoB,CAAE,sDAAF,CADL,CAHJ;AAMbM,EAAAA,gBAAgB,EAAE;AAChB;AAEAC,IAAAA,MAAM,EAAE,mBAAM;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,MAAnB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAZ;AAAA,4CAKV;AAAK,QAAA,EAAE,EAAC,OAAR,CAEE;AACA;AAHF;AAIE,QAAA,GAAG,EAAER,MAJP;AAKE,QAAA,OAAO,EAAE,MAAI;AALf;AAAA;AAAA;AAAA;AAAA,cALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAHE,GANL;AA2BbS,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,SADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,OAAD,OAAaA;AAAb;AAAA;AAAA;AAAA;AAAA;AAFzB,GADO,EAKP;AACEF,IAAAA,UAAU,EAAE,gBADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGEA,IAAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,QAAQ,EAAE,kBADZ;AAEEC,QAAAA,MAAM,EACJ,qIAHJ;AAIEC,QAAAA,EAAE,EAAE;AAJN,OADS,EAOT;AACEF,QAAAA,QAAQ,EAAE,gCADZ;AAEEC,QAAAA,MAAM,EACJ,iMAHJ;AAIEC,QAAAA,EAAE,EAAE;AAJN,OAPS;AADN;AAHT,GALO;AA3BI,CAAf;AAuDA,eAAed,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport volume from \"../asset/volumeOn.png\"\nimport Options from \"../Options/Options\"\n\n// const [lightMode, setLightMode ] = useState(false)\n\n\n\nconst config = {\n  \n  botName: \"WeatherBot\",\n  initialMessages: [\n    createChatBotMessage(`Hello! I am your weather assistant. How can I help ?`)\n  ],\n  customComponents: {\n    // Replaces the default header\n\n    header: () => <div style={{ backgroundColor: 'grey', padding: \"5px\" }}>\n      WeatherBot\n\n   \n      \n        <img id=\"image\"\n\n          // onClick={() => setLightMode(prevMode => !prevMode)}\n          // src={lightMode ? { volume } : { volume }}\n          src={volume}\n          onClick={()=>\"hello\"}\n\n        />\n\n     \n\n    </div>\n  },\n  widgets: [\n    {\n      widgetName: \"options\",\n      widgetFunc: (props) => <Options {...props} />,\n    },\n    {\n      widgetName: \"javascriptQuiz\",\n      widgetFunc: (props) => <Quiz {...props} />,\n      props: {\n        questions: [\n          {\n            question: \"What is closure?\",\n            answer:\n              \"Closure is a way for a function to retain access to it's enclosing function scope after the execution of that function is finished.\",\n            id: 1,\n          },\n          {\n            question: \"Explain prototypal inheritance\",\n            answer:\n              \"Prototypal inheritance is a link between an object and an object store that holds shared properties. If a property is not found on the host object, javascript will check the prototype object.\",\n            id: 2,\n          },\n        ],\n      },\n    },\n  ],\n};\n\nexport default config;\n\n"]},"metadata":{},"sourceType":"module"}