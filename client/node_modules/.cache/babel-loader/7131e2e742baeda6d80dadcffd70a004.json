{"ast":null,"code":"import { useSpeechSynthesis } from 'react-speech-kit';\n\nclass ActionProvider {\n  constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n    var _s = $RefreshSig$();\n\n    this.botMessage = _s(message => {\n      _s();\n\n      this.createChatBotMessage(useSpeechSynthesis(message));\n      const bot = this.createChatBotMessage(message);\n      this.addMessageToState(bot);\n    }, \"SeuM+SmDAdjwAXxSln1kdzstbm4=\", false, function () {\n      return [useSpeechSynthesis];\n    });\n\n    this.addMessageToState = message => {\n      this.setState(prevState => ({ ...prevState,\n        messages: [...prevState.messages, message]\n      })); // console.log(message);\n    };\n\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["/Users/kishanprajapati/web-chatbot/client/src/chatbot/ActionProvider.js"],"names":["useSpeechSynthesis","ActionProvider","constructor","createChatBotMessage","setStateFunc","createClientMessage","botMessage","message","bot","addMessageToState","setState","prevState","messages"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,kBAAnC;;AACA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,oBAAD,EAAuBC,YAAvB,EAAqCC,mBAArC,EAA0D;AAAA;;AAAA,SAMrEC,UANqE,MAMvDC,OAAD,IAAa;AAAA;;AACxB,WAAKJ,oBAAL,CAA0BH,kBAAkB,CAACO,OAAD,CAA5C;AACA,YAAMC,GAAG,GAAG,KAAKL,oBAAL,CAA0BI,OAA1B,CAAZ;AACA,WAAKE,iBAAL,CAAuBD,GAAvB;AACD,KAVoE;AAAA,cAOzCR,kBAPyC;AAAA;;AAAA,SAarES,iBAbqE,GAahDF,OAAD,IAAa;AAC/B,WAAKG,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BC,QAAAA,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAd,EAAwBL,OAAxB;AAFkB,OAAhB,CAAd,EAD+B,CAK/B;AACD,KAnBoE;;AACnE,SAAKJ,oBAAL,GAA4BA,oBAA5B;AACA,SAAKO,QAAL,GAAgBN,YAAhB;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACD;;AALgB;;AAuBnB,eAAeJ,cAAf","sourcesContent":["import { useSpeechSynthesis } from 'react-speech-kit';\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n\n    botMessage = (message) => {\n      this.createChatBotMessage(useSpeechSynthesis(message));\n      const bot = this.createChatBotMessage(message);\n      this.addMessageToState(bot);\n    }; \n  \n  \n    addMessageToState = (message) => {\n      this.setState((prevState) => ({\n        ...prevState,\n        messages: [...prevState.messages, message],\n      }));\n      // console.log(message);\n    };\n  }\n  \n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}