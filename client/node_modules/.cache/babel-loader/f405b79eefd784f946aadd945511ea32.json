{"ast":null,"code":"import axios from 'axios';\n\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    console.log(\"User Message\", message);\n    const data = {\n      \"languageCode\": \"en\",\n      \"queryText\": message,\n      \"sessionId\": \"121212213\"\n    };\n    axios.post('http://localhost:3000/dialogflow', data).then(response => {\n      console.log(\"Frontend:\", response.data); // console.log(\"response:\",response)\n\n      if (data.queryText == \"tomorrow\") {\n        this.actionProvider.botMessage(response.data.fulfillmentMessages[1].payload.richContent[0][0].options[0].text);\n      } else this.actionProvider.botMessage(response.data.fulfillmentText); // console.log(\"After function\");\n\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["/Users/kishanprajapati/web-chatbot/client/src/chatbot/MessageParser.js"],"names":["axios","MessageParser","constructor","actionProvider","parse","message","console","log","data","post","then","response","queryText","botMessage","fulfillmentMessages","payload","richContent","options","text","fulfillmentText","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,SAAKA,cAAL,GAAsBA,cAAtB;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AAEE,UAAMG,IAAI,GAAG;AACX,sBAAe,IADJ;AAEX,mBAAYH,OAFD;AAGX,mBAAY;AAHD,KAAb;AAKFL,IAAAA,KAAK,CAACS,IAAN,CAAW,kCAAX,EAA8CD,IAA9C,EACKE,IADL,CACUC,QAAQ,IAAG;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBI,QAAQ,CAACH,IAAjC,EADa,CAEb;;AACA,UAAGA,IAAI,CAACI,SAAL,IAAgB,UAAnB,EACA;AACE,aAAKT,cAAL,CAAoBU,UAApB,CAA+BF,QAAQ,CAACH,IAAT,CAAcM,mBAAd,CAAkC,CAAlC,EAAqCC,OAArC,CAA6CC,WAA7C,CAAyD,CAAzD,EAA4D,CAA5D,EAA+DC,OAA/D,CAAuE,CAAvE,EAA0EC,IAAzG;AACD,OAHD,MAKA,KAAKf,cAAL,CAAoBU,UAApB,CAA+BF,QAAQ,CAACH,IAAT,CAAcW,eAA7C,EARa,CASb;;AACH,KAXL,EAWOC,KAXP,CAWcC,KAAD,IAAW;AAClBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,KAbH;AAeD;;AA5BiB;;AA+BpB,eAAepB,aAAf","sourcesContent":["import axios from 'axios';\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    console.log(\"User Message\", message);\n    \n      const data = {\n        \"languageCode\":\"en\",\n        \"queryText\":message,\n        \"sessionId\":\"121212213\"\n    } \n    axios.post('http://localhost:3000/dialogflow',data)\n        .then(response =>{\n            console.log(\"Frontend:\",response.data);\n            // console.log(\"response:\",response)\n            if(data.queryText==\"tomorrow\")\n            {\n              this.actionProvider.botMessage(response.data.fulfillmentMessages[1].payload.richContent[0][0].options[0].text); \n            }\n            else\n            this.actionProvider.botMessage(response.data.fulfillmentText);\n            // console.log(\"After function\");\n        }).catch((error) => {\n          console.log(error)\n      });\n\n  }\n}\n\nexport default MessageParser;\n\n"]},"metadata":{},"sourceType":"module"}